---
export interface Props {
    lon: Number; // location longitude
    lat: Number; // location latitude
    mapLon: Number; // optional, map centre longitude
    mapLat: Number; // optional, map centre latitude
    mapTile: String; // optional, url for map tile provider, default is OSM
    mapSource: String; // optional, map tile provider, default is OSM
    zoom: Number; // optional, default is 13
    mapWidth: Number; // optional, default is 400 pixel
    mapHeight: Number; // optional, default is 400 pixel
}

var {
    mapLon,
    mapLat,
    mapTile,
    mapSource,
    zoom,
    mapWidth,
    mapHeight,
    lon,
    lat,
} = Astro.props;

// Default values if props are missing.
if (!lon) lon = 51.505;
if (!lat) lat = -0.09;
if (!zoom) zoom = 13;
if (!mapLon) mapLon = lon;
if (!mapLat) mapLat = lat;
if (!mapWidth) mapWidth = 400;
if (!mapHeight) mapHeight = 400;
var mapDimension = "width:" + mapWidth + "px; " + "height:" + mapHeight + "px;";

if (!mapTile) mapTile = "https://tile.openstreetmap.org/{z}/{x}/{y}.png";
if (!mapSource)
    mapSource =
        '<a href="https://openstreetmap.org/copyright">OpenStreetMap</a>';
---

<div>
    <link rel="stylesheet" href="/_leaflet/leaflet.css" />
    <script src="/_leaflet/leaflet.js" type="text/javascript"></script>

    <div class="flex justify-center">
        <div id="map" style={mapDimension}></div>
    </div>
    <script
        define:vars={{
            lon,
            lat,
            mapLon,
            mapLat,
            zoom,
            mapTile,
            mapSource,
        }}
    >
        var map = L.map("map").setView([mapLon, mapLat], zoom);

        var tiles = L.tileLayer(mapTile, {
            maxZoom: 19,
            attribution: "&copy; " + mapSource,
        }).addTo(map);

        var marker = L.marker([lon, lat]).addTo(map);
    </script>
</div>
